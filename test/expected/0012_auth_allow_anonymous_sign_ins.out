begin;
  -- 0 issues
  select * from lint."0012_auth_allow_anonymous_sign_ins";
 name | level | facing | description | remediation | detail | metadata | cache_key 
------+-------+--------+-------------+-------------+--------+----------+-----------
(0 rows)

  create table public.documents( id int primary key );
  -- Create a policy for the authenticated role that would allow access to anonymous login users
  -- if that feature is enabled 
  create policy "allow_access_to_authenticated" on public.documents
    as restrictive
    to authenticated
    using (true);
  -- 1 issues
  select * from lint."0012_auth_allow_anonymous_sign_ins";
             name              | level |  facing  |                                   description                                   |                              remediation                               |                                                                        detail                                                                        |                          metadata                          |                   cache_key                    
-------------------------------+-------+----------+---------------------------------------------------------------------------------+------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------+------------------------------------------------
 auth_allow_anonymous_sign_ins | INFO  | EXTERNAL | Detects row level security (RLS) policies that allow access to anonymous users. | https://supabase.github.io/splinter/0012_auth_allow_anonymous_sign_ins | Table \`public.documents\` has policies enforced on roles that allow access to anonymous users. Policies include \`{allow_access_to_authenticated}\` | {"name": "documents", "type": "table", "schema": "public"} | auth_allow_anonymous_sign_ins_public_documents
(1 row)

  drop policy "allow_access_to_authenticated" on public.documents;
  -- Resolve the issue by excluding anonymous login users
  create policy "allow_access_to_permanent_users" on documents
    as restrictive
    to authenticated
    using ( (select (auth.jwt() ->> 'is_anonymous')::boolean) is false );
  -- 0 issues
  select * from lint."0012_auth_allow_anonymous_sign_ins";
 name | level | facing | description | remediation | detail | metadata | cache_key 
------+-------+--------+-------------+-------------+--------+----------+-----------
(0 rows)

  -- Check if policy definition passes with case sensitive characters
  create policy "allow_access_to_permanent_users_case_senstive" on documents
    as restrictive
    to authenticated
    using ( (select (AUTH.JWT() ->> 'is_anonymous')::boolean) is false );
  -- 0 issues
  select * from lint."0012_auth_allow_anonymous_sign_ins";
 name | level | facing | description | remediation | detail | metadata | cache_key 
------+-------+--------+-------------+-------------+--------+----------+-----------
(0 rows)

rollback;
