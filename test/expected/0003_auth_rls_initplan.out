begin;
    set local search_path = '';
    savepoint a;
    -- No issues
    select * from lint."0003_auth_rls_initplan";
 name | title | level | facing | categories | description | detail | remediation | metadata | cache_key 
------+-------+-------+--------+------------+-------------+--------+-------------+----------+-----------
(0 rows)

    -- Create a view that exposes auth.users
    create table public.foo (
        id int primary key,
        user_id uuid,
        jwt jsonb,
        role text,
        email text
    );
    create policy bad_policy_uid on public.foo
    for select
        to authenticated
        using (user_id = auth.uid());
    create policy bad_policy_jwt on public.foo
    for insert
        to authenticated
        with check (jwt = auth.jwt());
    create policy bad_policy_role on public.foo
    for update
        to authenticated
        with check ("role" = auth.role());
    create policy bad_policy_email on public.foo
    for delete
        to authenticated
        using ("email" = auth.email());
    create policy bad_policy_current_setting on public.foo
    for delete
        to authenticated
        -- crazy whitespace is intentional
        using ("email" =   current_setting(  'role'  ));
    create policy good_policy_uid on public.foo
    for select
        to authenticated
        using (user_id = (select auth.uid()));
    create policy good_policy_jwt on public.foo
    for insert
        to authenticated
        with check (jwt = (select auth.jwt()));
    create policy good_policy_role on public.foo
    for update
        to authenticated
        with check ("role" = (select auth.role()));
    create policy good_policy_email on public.foo
    for delete
        to authenticated
        using ("email" = (select auth.email()));
    create policy good_policy_current_setting on public.foo
    for delete
        to authenticated
        using ("email" = (select current_setting('role')));
    -- Still empty because RLS not enabled
    select * from lint."0003_auth_rls_initplan";
 name | title | level | facing | categories | description | detail | remediation | metadata | cache_key 
------+-------+-------+--------+------------+-------------+--------+-------------+----------+-----------
(0 rows)

    alter table public.foo enable row level security;
    -- 5 entries, 1 per "bad_" policy
    select * from lint."0003_auth_rls_initplan";
       name        |            title             | level |  facing  |  categories   |                                                              description                                                              |                                                                                                                                                                                                                detail                                                                                                                                                                                                                 |                                      remediation                                      |                       metadata                       |                        cache_key                         

 auth_rls_initplan | Auth RLS Initialization Plan | WARN  | EXTERNAL | {PERFORMANCE} | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row | Table \`public.foo\` has a row level security policy \`bad_policy_uid\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan | {"name": "foo", "type": "table", "schema": "public"} | auth_rls_init_plan_public_foo_bad_policy_uid
 auth_rls_initplan | Auth RLS Initialization Plan | WARN  | EXTERNAL | {PERFORMANCE} | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row | Table \`public.foo\` has a row level security policy \`bad_policy_jwt\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan | {"name": "foo", "type": "table", "schema": "public"} | auth_rls_init_plan_public_foo_bad_policy_jwt
 auth_rls_initplan | Auth RLS Initialization Plan | WARN  | EXTERNAL | {PERFORMANCE} | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row | Table \`public.foo\` has a row level security policy \`bad_policy_role\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.            | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan | {"name": "foo", "type": "table", "schema": "public"} | auth_rls_init_plan_public_foo_bad_policy_role
 auth_rls_initplan | Auth RLS Initialization Plan | WARN  | EXTERNAL | {PERFORMANCE} | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row | Table \`public.foo\` has a row level security policy \`bad_policy_email\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.           | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan | {"name": "foo", "type": "table", "schema": "public"} | auth_rls_init_plan_public_foo_bad_policy_email
 auth_rls_initplan | Auth RLS Initialization Plan | WARN  | EXTERNAL | {PERFORMANCE} | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row | Table \`public.foo\` has a row level security policy \`bad_policy_current_setting\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info. | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan | {"name": "foo", "type": "table", "schema": "public"} | auth_rls_init_plan_public_foo_bad_policy_current_setting
(5 rows)

    rollback to savepoint a;
    -- Confirm that realtime.messages will be scanned
    create schema realtime;
    create table realtime.messages( id int primary key);
    create policy realtime_check on realtime.messages
    for insert
        to authenticated
        with check ('foo' = auth.role());
    alter table realtime.messages enable row level security;
    -- 1 entry for realtime.messages
    select * from lint."0003_auth_rls_initplan";
       name        |            title             | level |  facing  |  categories   |                                                              description                                                              |                                                                                                                                                                                                              detail                                                                                                                                                                                                              |                                      remediation                                      |                          metadata                           |                      cache_key                      
-------------------+------------------------------+-------+----------+---------------+---------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------------------------------------------+-----------------------------------------------------
 auth_rls_initplan | Auth RLS Initialization Plan | WARN  | EXTERNAL | {PERFORMANCE} | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row | Table \`realtime.messages\` has a row level security policy \`realtime_check\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info. | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan | {"name": "messages", "type": "table", "schema": "realtime"} | auth_rls_init_plan_realtime_messages_realtime_check
(1 row)

rollback;
